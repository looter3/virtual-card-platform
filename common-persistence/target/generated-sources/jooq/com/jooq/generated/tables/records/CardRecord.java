/*
 * This file is generated by jOOQ.
 */
package com.jooq.generated.tables.records;


import com.jooq.generated.enums.CardStatus;
import com.jooq.generated.tables.Card;
import com.jooq.generated.tables.pojos.CardDTO;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CardRecord extends UpdatableRecordImpl<CardRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>card_system.Card.id</code>.
     */
    public CardRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>card_system.Card.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>card_system.Card.cardholderName</code>.
     */
    public CardRecord setCardholdername(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>card_system.Card.cardholderName</code>.
     */
    public String getCardholdername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>card_system.Card.balance</code>.
     */
    public CardRecord setBalance(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>card_system.Card.balance</code>.
     */
    public BigDecimal getBalance() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>card_system.Card.createdAt</code>.
     */
    public CardRecord setCreatedat(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>card_system.Card.createdAt</code>.
     */
    public LocalDateTime getCreatedat() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>card_system.Card.status</code>.
     */
    public CardRecord setStatus(CardStatus value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>card_system.Card.status</code>.
     */
    public CardStatus getStatus() {
        return (CardStatus) get(4);
    }

    /**
     * Setter for <code>card_system.Card.version</code>.
     */
    public CardRecord setVersion(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>card_system.Card.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CardRecord
     */
    public CardRecord() {
        super(Card.CARD);
    }

    /**
     * Create a detached, initialised CardRecord
     */
    public CardRecord(String id, String cardholdername, BigDecimal balance, LocalDateTime createdat, CardStatus status, Integer version) {
        super(Card.CARD);

        setId(id);
        setCardholdername(cardholdername);
        setBalance(balance);
        setCreatedat(createdat);
        setStatus(status);
        setVersion(version);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CardRecord
     */
    public CardRecord(CardDTO value) {
        super(Card.CARD);

        if (value != null) {
            setId(value.getId());
            setCardholdername(value.getCardholdername());
            setBalance(value.getBalance());
            setCreatedat(value.getCreatedat());
            setStatus(value.getStatus());
            setVersion(value.getVersion());
            resetChangedOnNotNull();
        }
    }
}
