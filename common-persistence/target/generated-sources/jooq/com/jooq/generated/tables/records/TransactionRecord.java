/*
 * This file is generated by jOOQ.
 */
package com.jooq.generated.tables.records;


import com.jooq.generated.enums.TransactionType;
import com.jooq.generated.tables.Transaction;
import com.jooq.generated.tables.pojos.TransactionDTO;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TransactionRecord extends UpdatableRecordImpl<TransactionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>card_system.Transaction.id</code>.
     */
    public TransactionRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>card_system.Transaction.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>card_system.Transaction.cardId</code>.
     */
    public TransactionRecord setCardid(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>card_system.Transaction.cardId</code>.
     */
    public String getCardid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>card_system.Transaction.type</code>.
     */
    public TransactionRecord setType(TransactionType value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>card_system.Transaction.type</code>.
     */
    public TransactionType getType() {
        return (TransactionType) get(2);
    }

    /**
     * Setter for <code>card_system.Transaction.amount</code>.
     */
    public TransactionRecord setAmount(BigDecimal value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>card_system.Transaction.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>card_system.Transaction.createdAt</code>.
     */
    public TransactionRecord setCreatedat(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>card_system.Transaction.createdAt</code>.
     */
    public LocalDateTime getCreatedat() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionRecord
     */
    public TransactionRecord() {
        super(Transaction.TRANSACTION);
    }

    /**
     * Create a detached, initialised TransactionRecord
     */
    public TransactionRecord(String id, String cardid, TransactionType type, BigDecimal amount, LocalDateTime createdat) {
        super(Transaction.TRANSACTION);

        setId(id);
        setCardid(cardid);
        setType(type);
        setAmount(amount);
        setCreatedat(createdat);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TransactionRecord
     */
    public TransactionRecord(TransactionDTO value) {
        super(Transaction.TRANSACTION);

        if (value != null) {
            setId(value.getId());
            setCardid(value.getCardid());
            setType(value.getType());
            setAmount(value.getAmount());
            setCreatedat(value.getCreatedat());
            resetChangedOnNotNull();
        }
    }
}
